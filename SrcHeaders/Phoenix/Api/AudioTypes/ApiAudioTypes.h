/****************************************************************************
* Program/file: ApiAudioTypes.h
*
* Copyright (C) by RTX TELECOM A/S, Denmark.
* These computer program listings and specifications, are the property of
* RTX TELECOM A/S, Denmark and shall not be reproduced or copied or used in
* whole or in part without written permission from RTX TELECOM A/S, Denmark.
*
*  Programmer: Mikael Bo Andersen
*
*  MODULE:                 ApiAudioTypes
*  CONTROLLING DOCUMENT:   Phoenix_API_AudioTypes.doc   Revision: 1073
*  SYSTEM DEPENDENCIES:
*
*  DESCRIPTION: Definition of the ApiAudioTypes interface.
*
*               This file is generated by Word from the interface document:
*                  Phoenix_API_AudioTypes.doc using InterfaceMacro version 61
*
*               DO NOT MAKE CHANGES TO THIS FILE DIRECTLY!
*               CHANGES SHOULD ONLY BE MADE TO THE INTERFACE DOCUMENT!
*
****************************************************************************/

/*! \file
* Definition of the ApiAudioTypes interface.
*/

/****************************************************************************
*                                  PVCS info
*****************************************************************************

$Author:   mba  $
$Date:   10 Sep 2012 10:11:04  $
$Revision:   1.0  $
$Modtime:   10 Sep 2012 10:10:12  $
$Archive:   J:/sw/Include/Phoenix/Api/AudioTypes/vcs/ApiAudioTypes.h_v  $
*/

#ifndef APIAUDIOTYPES_H
#define APIAUDIOTYPES_H

/****************************************************************************
*                               Include files
****************************************************************************/

/****************************************************************************
*                               Macros/Defines
****************************************************************************/

/****************************************************************************
*                     Enumerations/Type definitions/Structs
****************************************************************************/

#if (RTX_CORE_VERSION >= 0x0224)
  #include <Standard/Common/RsPushPack1.h>
#else
  #pragma pack(push,1)
#endif

/* Global mail primitives:
The global mail primitives MUST be defined in Global.h! */

/*! The enum defines the PCM FSC frequencies supported by the device. */
typedef enum RSENUMTAG(ApiPcmFscFreqType)
{
  AP_FSC_FREQ_8KHZ    = 0x00, /*!< PCM FSC frequency is 8 KHz. */
  AP_FSC_FREQ_16KHZ   = 0x01, /*!< PCM FSC frequency is 16 KHz. */
  AP_FSC_FREQ_32KHZ   = 0x02, /*!< PCM FSC frequency is 32 KHz. */
  AP_FSC_FREQ_INVALID = 0xFF  /*!< [0x03; 0xFF] is invalid. */
} RSENUM8(ApiPcmFscFreqType);

/*! This enum defines the FSC pulse length settings supported by the device
   when it is master on the PCM interface. */
typedef enum RSENUMTAG(ApiPcmFscLengthType)
{
  AP_FSC_LENGTH_1       = 0x00, /*!< The length of PCM FSC pulse is equal to 1 data bit.
                                      (Master) */
  AP_FSC_LENGTH_8       = 0x01, /*!< The length of PCM FSC pulse is equal to 8 data
                                   bits.   (Master) */
  AP_FSC_LENGTH_16      = 0x02, /*!< The length of PCM FSC pulse is equal to 16 data
                                   bits. (Master) */
  AP_FSC_LENGTH_32      = 0x03, /*!< The length of PCM FSC pulse is equal to 32 data
                                   bits. (Master) */
  AP_FSC_LENGTH_48      = 0x04, /*!< The length of PCM FSC pulse is equal to 48 data
                                   bits. (Master) */
  AP_FSC_LENGTH_NORMAL  = 0x05, /*!< Ch 0-5 shifted in after FSC edge. (Slave) */
  AP_FSC_LENGTH_SPLIT   = 0x06, /*!< Ch 0-2 shifted in after FSC edge, Ch 3-5 shifted
                                   after opposite FSC edge. (Slave) */
  AP_FSC_LENGTH_INVALID = 0xFF  /*!< [0x07; 0xFF] is invalid. */
} RSENUM8(ApiPcmFscLengthType);

/*! This enum defines the possible PCM_CLK frequencies (1 clock/bit)
   supported by the device module when it is master on the PCM interface. */
typedef enum RSENUMTAG(ApiPcmClkType)
{
  AP_PCM_CLK_1152    = 0x00, /*!< 1.152 MHz */
  AP_PCM_CLK_2304    = 0x01, /*!< 2.304 MHz */
  AP_PCM_CLK_4608    = 0x02, /*!< 4.608 MHz */
  AP_PCM_CLK_1536    = 0x03, /*!< 1.536 MHz */
  AP_PCM_CLK_INVALID = 0xFF  /*!< [0x04; 0xFF] is invalid. */
} RSENUM8(ApiPcmClkType);


/*! Mail without parameters. */
typedef struct ApiaudiotypesEmptySignalType
{
  RosPrimitiveType Primitive; /*!< Mail primitive. */
} ApiaudiotypesEmptySignalType;

#if (RTX_CORE_VERSION >= 0x0224)
  #include <Standard/Common/RsPopPack.h>
#else
  #pragma pack(pop)
#endif

#ifdef __cplusplus
extern "C"
{
#endif
/** \cond internal */

/****************************************************************************
*     Function prototypes for mail packaging and sending(MPS) functions
****************************************************************************/

/** \endcond */
#ifdef __cplusplus
}
#endif
#endif /*APIAUDIOTYPES_H */


