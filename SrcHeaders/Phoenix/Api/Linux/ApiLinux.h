/****************************************************************************
* Program/file: ApiLinux.h
*
* Copyright (C) by RTX A/S, Denmark.
* These computer program listings and specifications, are the property of
* RTX A/S, Denmark and shall not be reproduced or copied or used in
* whole or in part without written permission from RTX A/S, Denmark.
*
* Programmer: 
*
* MODULE: ApiLinux
* CONTROLLING DOCUMENT: Phoenix_API_Linux.doc   Revision: 39
* DESCRIPTION: Definition of the ApiLinux interface.
* This file is generated by Word from the interface document: Phoenix_API_Linux.doc using InterfaceMacro version 70
*
* DO NOT MAKE CHANGES TO THIS FILE DIRECTLY!
* CHANGES SHOULD ONLY BE MADE TO THE INTERFACE DOCUMENT!
*
****************************************************************************/

/*! \file
* Definition of the ApiLinux interface.
*/

/****************************************************************************
*                                  PVCS info
*****************************************************************************

$Author:   tma  $
$Date:   20 Mar 2014 11:40:52  $
$Revision:   1.2  $
$Modtime:   20 Mar 2014 08:44:48  $
$Archive:   J:/sw/Include/Phoenix/Api/Linux/vcs/ApiLinux.h_v  $
*/

#ifndef APILINUX_H
#define APILINUX_H

/****************************************************************************
*                               Include files
****************************************************************************/
/*! The following API files must be included. */
#include <Api/ApiCfg.h>

#include <Phoenix/Api/Types/ApiTypes.h>

/****************************************************************************
*                               Macros/Defines
****************************************************************************/

/****************************************************************************
*                     Enumerations/Type definitions/Structs
****************************************************************************/

#ifdef RTX_OS_VERSION
  #include <RS/Common/RsPushPack1.h>
#elif (RTX_CORE_VERSION >= 0x0224)
  #include <Standard/Common/RsPushPack1.h>
#else
  #pragma pack(push,1)
#endif

/* Mail primitives:
  API_LINUX_INIT_GET_SYSTEM_INFO_REQ = 0x4710,
  API_LINUX_INIT_GET_SYSTEM_INFO_CFM = 0x4711,
  API_LINUX_INIT_REQ = 0x4702,
  API_LINUX_INIT_CFM = 0x4713,
  API_LINUX_NVS_UPDATE_IND = 0x4714,
  API_LINUX_INTERNAL_ERROR_IND = 0x4715,
End of mail primitives. */



/*! This enum identifies the linux kernel driver error codes. */
typedef enum RSENUMTAG(ApiLinuxErrorCodeType)
{
  API_LINUX_EC_ISR_TOO_SLOW   = 0x00, /*!< ISR was serviced too slow. */
  API_LINUX_EC_WRONG_NVS_SIZE = 0x01, /*!< Initialization failed due to incorrect NVS
                                         size. */
  API_LINUX_EC_SUCCES         = 0xFF  /*!< Command was successfully executed */
} RSENUM8(ApiLinuxErrorCodeType);


/*! Mail without parameters. */
typedef struct ApilinuxEmptySignalType
{
  RosPrimitiveType Primitive; /*!< Mail primitive. */
} ApilinuxEmptySignalType;

/*! This mail is used by the application to retrieve information from the
   DECT driver before it is initialized. 
    NB: This mail can be sent before the system is initialized. */
typedef ApilinuxEmptySignalType ApiLinuxInitGetSystemInfoReqType;

/*! The mail contains important information about the DECT driver that must
   be used by the application in ordet to initialize the system correctly. */
typedef struct ApiLinuxInitGetSystemInfoCfmType
{
  RosPrimitiveType Primitive;            /*!< API_LINUX_INIT_GET_SYSTEM_INFO_CFM = 0x4711 */
  rsuint32 NvsSize;                     /*!< Size of the NVS */
  rsuint16 MaxMailSize;                 /*!< Maximum size of API mails */
} ApiLinuxInitGetSystemInfoCfmType;

/*! This mail is used by the application to start the DECT driver. The mail
   contains the NVS data stored by the DECT driver during earlier uses (See API_LINUX_NVS_UPDATE_IND).
    
    NB:
    This mail must be sent as the first after driver load. Until it is sent
   all other mails will be ignored. 
    This mail can only be sent once.  
    The MaxMailSize limitation does not apply to this mail. */
typedef struct ApiLinuxInitReqType
{
  RosPrimitiveType Primitive;            /*!< API_LINUX_INIT_REQ = 0x4702 */
  rsuint32 LengthOfData;                /*!< Length of the NVS data. This must be
                                           exactly the same size as indicated in
                                           API_LINUX_INIT_GET_SYSTEM_INFO_CFM or
                                           0 if this is the first time the DECT driver is
                                           used. In case the length is set to 0 the DECT
                                           driver will set all NVS values to their default values.
                                           
                                           All other lengths will make the initialization
                                           fail. */
  rsuint8 Data[1];                      /*!< NVS Data. */
} ApiLinuxInitReqType;

/*! The mail contains information about the addresses of the voice channel
   buffers used by the device driver. */
typedef struct ApiLinuxInitCfmType
{
  RosPrimitiveType Primitive;            /*!< API_LINUX_INIT_CFM = 0x4713 */
  ApiLinuxErrorCodeType Status;         /*!< Indicates whether the command succeeded or
                                           not. */
} ApiLinuxInitCfmType;

/*! This mail is sent from the DECT driver, when changes have to be stored
   in NVS. The application must save the data in order to supply it the next
   time the DECT driver is initialized with API_LINUX_INIT_REQ. There is no
   confirmation mail. 
     */
typedef struct ApiLinuxNvsUpdateIndType
{
  RosPrimitiveType Primitive;            /*!< API_LINUX_NVS_UPDATE_IND = 0x4714 */
  rsuint32 NvsOffset;                   /*!< Offset into NVS to store this data. */
  rsuint16 NvsDataLength;               /*!< Length of NvsData field. */
  rsuint8 NvsData[1];                   /*!< Variable length data contains length bytes
                                           of NVS data to be stored. */
} ApiLinuxNvsUpdateIndType;

/*! This mail is sent from the DECT driver, in case of critical internal
   errors. See the error code for additional information 
     */
typedef struct ApiLinuxInternalErrorIndType
{
  RosPrimitiveType Primitive;            /*!< API_LINUX_INTERNAL_ERROR_IND = 0x4715 */
  ApiLinuxErrorCodeType ErrorCode;      /*!< Error code. */
} ApiLinuxInternalErrorIndType;

#ifdef RTX_OS_VERSION
  #include <RS/Common/RsPopPack.h>
#elif (RTX_CORE_VERSION >= 0x0224)
  #include <Standard/Common/RsPopPack.h>
#else
  #pragma pack(pop)
#endif

#ifdef __cplusplus
extern "C"
{
#endif
/** \cond internal */

/****************************************************************************
*     Function prototypes for mail packaging and sending(MPS) functions
****************************************************************************/

/****************************************************************************
* FUNCTION:      SendApiLinuxInitGetSystemInfoReq
* DESCRIPTION:   MPS function for sending mails with primitive:
*                API_LINUX_INIT_GET_SYSTEM_INFO_REQ = 0x4710
****************************************************************************/
void SendApiLinuxInitGetSystemInfoReq ( RosTaskIdType Src );


/****************************************************************************
* FUNCTION:      SendApiLinuxInitReq
* DESCRIPTION:   MPS function for sending mails with primitive:
*                API_LINUX_INIT_REQ = 0x4702
****************************************************************************/
void SendApiLinuxInitReq ( RosTaskIdType Src,
                           rsuint32 LengthOfData,            /*!< Length of the NVS
                                                                data. This must be exactly
                                                                the same size as indicated
                                                                in
                                                                API_LINUX_INIT_GET_SYSTEM_INF
                                                                O_CFM or
                                                                0 if this is the first time
                                                                the DECT driver is used. In
                                                                case the length is set to 0
                                                                the DECT driver will set all
                                                                NVS values to their default values.
                                                                
                                                                All other lengths will make
                                                                the initialization fail. */
                           rsuint8 Data[1]);                 /*!< NVS Data. */

/****************************************************************************
* FUNCTION:      SendApiLinuxNvsUpdateInd
* DESCRIPTION:   MPS function for sending mails with primitive:
*                API_LINUX_NVS_UPDATE_IND = 0x4714
****************************************************************************/
void SendApiLinuxNvsUpdateInd ( RosTaskIdType Src,
                                rsuint32 NvsOffset,          /*!< Offset into NVS to
                                                                store this data. */
                                rsuint16 NvsDataLength,      /*!< Length of NvsData
                                                                field. */
                                rsuint8 NvsData[1]);         /*!< Variable length data
                                                                contains length bytes of NVS
                                                                data to be stored. */

/****************************************************************************
* FUNCTION:      SendApiLinuxInternalErrorInd
* DESCRIPTION:   MPS function for sending mails with primitive:
*                API_LINUX_INTERNAL_ERROR_IND = 0x4715
****************************************************************************/
void SendApiLinuxInternalErrorInd ( RosTaskIdType Src,
                                    ApiLinuxErrorCodeType ErrorCode);
                                                             /*!< Error code. */

/** \endcond */
#ifdef __cplusplus
}
#endif
#endif /*APILINUX_H */


